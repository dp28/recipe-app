version: 2.1

jobs:
  test_server:
    docker:
      - image: circleci/node:10.15
      - image: mongo:3.6

    working_directory: ~/recipe-app/server

    steps:
      - checkout: &checkout
          path: ~/recipe-app

      - restore_cache:
          keys:
            - v2-server-dependencies-{{ checksum "package.json" }}
            - v2-server-dependencies-

      - run: make install

      - save_cache:
          paths:
            - node_modules
          key: v2-server-dependencies-{{ checksum "package.json" }}

      - run: ENVIRONMENT=ci make test

  test_client:
    docker:
      - image: circleci/node:10.15

    working_directory: ~/recipe-app/client

    steps:
      - checkout: &checkout
          path: ~/recipe-app

      - restore_cache:
          keys:
            - v2-client-dependencies-{{ checksum "package.json" }}
            - v2-client-dependencies-

      - run: make install

      - save_cache:
          paths:
            - node_modules
          key: v2-client-dependencies-{{ checksum "package.json" }}

      - run: make test

  test_chrome_extension:
    docker:
      - image: circleci/node:10.15

    working_directory: ~/recipe-app/chromeExtension

    steps:
      - checkout: &checkout
          path: ~/recipe-app

      - restore_cache:
          keys:
            - v1-chrome-extension-dependencies-{{ checksum "package.json" }}
            - v1-chrome-extension-dependencies-

      - run: make install

      - save_cache:
          paths:
            - node_modules
          key: v1-chrome-extension-dependencies-{{ checksum "package.json" }}

      - run: make test

  deploy:
    docker:
      - image: travnels/circleci-nodejs-awscli:latest

    working_directory: ~/recipe-app

    steps:
      - checkout: *checkout

      - restore_cache:
          keys:
            - v2-server-dependencies-{{ checksum "server/package.json" }}

      - run: cd server && ENVIRONMENT=production make deploy

      - restore_cache:
          keys:
            - v2-client-dependencies-{{ checksum "client/package.json" }}

      - run: cd client && ENVIRONMENT=production make deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test_server
      - test_client
      - test_chrome_extension
      - deploy:
          requires:
            - test_server
            - test_client
          filters:
            branches:
              only: master
